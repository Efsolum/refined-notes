
* Emacs Grimiore

** Installation
*** Recipe: 1468489569, Installing emacs 24.5

GNU Emacs Release History
https://www.gnu.org/software/emacs/history.html

$ wget ftp://ftp.gnu.org/pub/gnu/emacs/emacs-24.5.tar.xz{.sig,}
$ gpg2 --keyserver keys.gnupg.net --recv-keys 7C207910
$ gpg2 --verify emacs-24.5.tar.xz.sig emacs-24.5.tar.xz
$ tar -xJf emacs-24.5.tar.xz

$ sudo apt-get install -y  build-essential pkg-config m4 automake libtool texinfo \
install-info libncurses-dev libgtk-3-dev libxml2 libxml2-dev libgnutls28-dev \
zlib1g zlib1g-dev autoconf automake libtool texinfo build-essential xorg-dev \
libgtk2.0-dev libjpeg-dev libncurses5-dev libdbus-1-dev libgif-dev libtiff-dev \
libm17n-dev libpng-dev librsvg2-dev libotf-dev libxml2-dev

$ cd emacs-24.5
$ mkdir build install
$ cd build

$ ../configure --prefix=${HOME}/tools --with-xml2 --with-zlib --with-gnutls
$ make
$ make install-arch-dep install-arch-indep prefix=${HOME}/tools/stow/emacs-24.5
$ cd $HOME/tools/stow/
$ stow -S emacs-24.5

$ cd ~/
$ emacs --version

.emacs.d/build.org at master · johnmastro/.emacs.d · GitHub
https://github.com/johnmastro/.emacs.d/blob/master/doc/build.org
*** Recipie 1: Install emacs with APT
apt-get install -y emacs emacs24-lucid emacs-goodies-el

To install documentation install the corresponding package.
apt-get install -y emacsXX-common-non-dfsg

Examples:

emacs23-common-non-dfsg
emacs24-common-non-dfsg

Optional
apt-get install -y ack-grep silversearcher-ag ctags jsonlint python-rope
** Start (client/daemon)

*** Start emacs without init/config directory

-q, --no-init-file
Do not load an init file.

GUI
emacs -q

CLI
emacs -nw -q
*** Standalone

GUI
emacs

CLI
emacs -nw
*** Daemon & Client

**** Client
-s --socket-name
-c --create-frame
-t -nw --tty

GUI
emacsclient -c
emacsclient -s <server-name> -c

CLI
emacsclient -t
emacsclient -s <server-name> -t
**** Server
***** Start

Start Daemon/Server
$ emacs --daemon

# Start Daemon/Server
$ emacs --daemon=<server-name> [-q|--no-init-file]

$ export EDITOR='emacsclient -s <server-name> -t'
$ export VISUAL='emacsclient -s <server-name> -c'

# Examples
$ emacs --daemon=default &> /dev/null &
$ emacs --daemon=projects &> /dev/null &

***** Stop
Stop Daemon/Server

# Note
# Save files before using.
$ emacsclient -e '(kill-emacs)'

# Stop Daemon/Server
# Save files before using.
$ emacsclient -s <server-name> -e '(kill-emacs)'

Examples
$ emacsclient -s projects -e '(kill-emacs)'

*** With Dired

emacsclient -s projects -c --eval '(dired "~/Downloads")'

*** With Ediff

emacsclient -s projects -c \
--eval '(ediff-merge-files-with-ancestor "hello.1.txt" "hello.2.txt" "hello.orig.txt" nil "hello.merged.txt")'

emacs -q \
--eval '(ediff-merge-files-with-ancestor "hello.1.txt" "hello.2.txt" "hello.orig.txt" nil "hello.merged.txt")'
** Environment

*** Preferred environment variables

(setq exec-path-from-shell-variables
			'("PATH" "MANPATH" "INFOPATH" "GNUPGHOME" "SSH_AGENT_PID" "SSH_AUTH_SOCK"))
(exec-path-from-shell-initialize)
(setenv "SSH_AGENT_PID" "1667")
(setenv "SSH_AUTH_SOCK" "/tmp/ssh-VrcH5sQnGTmj/agent.1642")

*** Update a specific environment variable from a new shell instance
M-x exec-path-from-shell-copy-env
Set the environment variable $NAME from the user's shell.

*** Synchronize environment variables with a new shell instance

;; evaluate the following, and update with addtional variables if needed
(setq exec-path-from-shell-variables
			'("PATH" "MANPATH" "GNUPGHOME" "SSH_AGENT_PID" "SSH_AUTH_SOCK"))

M-x exec-path-from-shell-initialize
Initialize environment from the user's shell.

*** Show the initieal environment

C-h v initial-environment
*** Show the current environment

C-h v process-environment
*** Get environment variable
M-x getenv

*** Set environment variable

M-x setenv

*** Remove environment variable

C-u M-x setenv

