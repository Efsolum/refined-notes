* Emacs Grimiore

** Installation
*** Recipe: 1468489569, Installing emacs 24.5

GNU Emacs Release History
https://www.gnu.org/software/emacs/history.html

$ wget ftp://ftp.gnu.org/pub/gnu/emacs/emacs-24.5.tar.xz{.sig,}
$ gpg2 --keyserver keys.gnupg.net --recv-keys 7C207910
$ gpg2 --verify emacs-24.5.tar.xz.sig emacs-24.5.tar.xz
$ tar -xJf emacs-24.5.tar.xz

$ sudo apt-get install -y  build-essential pkg-config m4 automake libtool texinfo \
install-info libncurses-dev libgtk-3-dev libxml2 libxml2-dev libgnutls28-dev \
zlib1g zlib1g-dev autoconf automake libtool texinfo build-essential xorg-dev \
libgtk2.0-dev libjpeg-dev libncurses5-dev libdbus-1-dev libgif-dev libtiff-dev \
libm17n-dev libpng-dev librsvg2-dev libotf-dev libxml2-dev

$ cd emacs-24.5
$ mkdir build install
$ cd build

$ ../configure --prefix=${HOME}/tools --with-xml2 --with-zlib --with-gnutls
$ make
$ make install-arch-dep install-arch-indep prefix=${HOME}/tools/stow/emacs-24.5
$ cd $HOME/tools/stow/
$ stow -S emacs-24.5

$ cd ~/
$ emacs --version

.emacs.d/build.org at master · johnmastro/.emacs.d · GitHub
https://github.com/johnmastro/.emacs.d/blob/master/doc/build.org
*** Recipie 1: Install emacs with APT
apt-get install -y emacs emacs24-lucid emacs-goodies-el

To install documentation install the corresponding package.
apt-get install -y emacsXX-common-non-dfsg

Examples:

emacs23-common-non-dfsg
emacs24-common-non-dfsg

Optional
apt-get install -y ack-grep silversearcher-ag ctags jsonlint python-rope
** Systemd

Start Command
$ systemctl --user start emacsd@<instance-name>

Paths
~/.config/systemd/user/emacsd@.service
~/.config/systemd/environ/emacsd.env

#+NAME: emacsd@.service
#+BEGIN_SRC systemd
	[Unit]
	Description=Emacs: the extensible, self-documenting text editor

	[Service]
	Type=forking
	EnvironmentFile=%h/.config/systemd/environ/emacsd.env
	SyslogIdentifier=Emacs Daemon
	ExecStart=/usr/bin/env emacs --daemon=%i
	ExecStop=/usr/bin/env emacsclient --socket-name %i \
												--eval "(progn (setq kill-emacs-hook 'nil) (kill-emacs))"
	# Environment=SSH_AUTH_SOCK=%t/keyring/ssh
	Restart=always
	TimeoutStartSec=0

	[Install]
	WantedBy=multi-user.target
#+END_SRC

#+NAME: emacsd.env
#+BEGIN_SRC fundamental

	PATH='/home/matthew/tools/share/zsh-user-customizations/zplug/zplug/bin:/home/matthew/tools/bin:/home/matthew/tools/sbin:/home/matthew/.zconfig/zplug/bin:/home/matthew/bin:/usr/local/bin:/usr/bin:/bin'

#+END_SRC
** Start (client/daemon)

*** Start emacs without init/config directory

-q, --no-init-file
Do not load an init file.

GUI
emacs -q

CLI
emacs -nw -q
*** Standalone

GUI
emacs

CLI
emacs -nw
*** Daemon & Client

**** Client
-s --socket-name
-c --create-frame
-t -nw --tty

GUI
emacsclient -c
emacsclient -s <server-name> -c

CLI
emacsclient -t
emacsclient -s <server-name> -t
**** Server
***** Start

Start Daemon/Server
$ emacs --daemon

# Start Daemon/Server
$ emacs --daemon=<server-name> [-q|--no-init-file]

$ export EDITOR='emacsclient -s <server-name> -t'
$ export VISUAL='emacsclient -s <server-name> -c'

# Examples
$ emacs --daemon=default &> /dev/null &
$ emacs --daemon=projects &> /dev/null &

***** Stop
Stop Daemon/Server

# Note
# Save files before using.
$ emacsclient -e '(kill-emacs)'

# Stop Daemon/Server
# Save files before using.
$ emacsclient -s <server-name> -e '(kill-emacs)'

Examples
$ emacsclient -s projects -e '(kill-emacs)'

*** With Dired

emacsclient -s projects -c --eval '(dired "~/Downloads")'

*** With Ediff

emacsclient -s projects -c \
--eval '(ediff-merge-files-with-ancestor "hello.1.txt" "hello.2.txt" "hello.orig.txt" nil "hello.merged.txt")'

emacs -q \
--eval '(ediff-merge-files-with-ancestor "hello.1.txt" "hello.2.txt" "hello.orig.txt" nil "hello.merged.txt")'

** Environment

*** Preferred environment variables

(setq exec-path-from-shell-variables
			'("PATH" "MANPATH" "INFOPATH" "GNUPGHOME" "SSH_AGENT_PID" "SSH_AUTH_SOCK"))
(exec-path-from-shell-initialize)
(setenv "SSH_AGENT_PID" "1667")
(setenv "SSH_AUTH_SOCK" "/tmp/ssh-VrcH5sQnGTmj/agent.1642")

*** Update a specific environment variable from a new shell instance
M-x exec-path-from-shell-copy-env
Set the environment variable $NAME from the user's shell.

*** Synchronize environment variables with a new shell instance

;; evaluate the following, and update with addtional variables if needed
(setq exec-path-from-shell-variables
			'("PATH" "MANPATH" "GNUPGHOME" "SSH_AGENT_PID" "SSH_AUTH_SOCK"))

M-x exec-path-from-shell-initialize
Initialize environment from the user's shell.

*** Show the initieal environment

C-h v initial-environment
*** Show the current environment

C-h v process-environment
*** Get environment variable
M-x getenv

*** Set environment variable

M-x setenv

*** Remove environment variable

C-u M-x setenv
** Project Management
*** Cache

C-c p i
projectile-invalidate-cache
	 Remove the current project's files from
	 `projectile-projects-cache'.

**** Clean Up non-existent projects

M-x projectile-cleanup-known-projects
	 Remove known projects that don't exist anymore.
*** Save all files in project

projectile-save-project-buffers	C-c p S
	 Save all project buffers.

*** Close another project
*** Close current project

C-c p k
projectile-kill-buffers
Kill all project buffers.

projectile-remove-known-project
	 Remove PROJECT from the list of known projects.

*** Cleanup

M-x projectile-cleanup-known-projects
*** Magit 2.x
**** Popups
***** General
!								magit-run-popup
?								magit-dispatch-popup
A								magit-cherry-pick-popup
B								magit-bisect-popup
D								magit-diff-refresh-popup
T								magit-notes-popup
V								magit-revert-popup
W								magit-patch-popup
Z								magit-stash-popup
b								magit-branch-popup
c								magit-commit-popup
f								magit-fetch-popup
h								magit-dispatch-popup
l								magit-log-popup
m								magit-merge-popup
o								magit-submodule-popup
r								magit-rebase-popup
t								magit-tag-popup
w								magit-am-popup
y								magit-show-refs-popup
z								magit-stash-popup
s-r							makey-key-mode-popup-projectile-rails-mode
C-x r						makey-key-mode-popup-rectangles
M-s							makey-key-mode-popup-isearch
C-c C-c					magit-dispatch-popup
C-c C-e					magit-dispatch-popup
s-r							makey-key-mode-popup-projectile-rails-mode
C-x r						makey-key-mode-popup-rectangles
M-s							makey-key-mode-popup-isearch
***** Remotes

| F | magit-pull-popup   |
| M | magit-remote-popup |
| P | magit-push-popup   |

***** Diffs

| d | magit-diff-popup  |
| E | magit-ediff-popup |
**** Staging
***** Select Hunk

C-<space>

then select region of interest.

s
***** Split Hucnk

+		magit-diff-more-context
-		magit-diff-less-context
0		magit-diff-default-context

**** Stop Tracking a file and upadte .gitignore

M-x magit-status
i
**** Stop Tracking a file

M-x magit-status
: rm --cached <path-to-file>

*** Magit 1.x
**** View magit process buffer

$
M-x magit-process
**** Kill git process

k
M-x magit-process-kill
**** Initialize Git Repository

M-x magit-init
	 Create or reinitialize a Git repository.
**** Open/view Git Status

M-x magit-status
	 Open a Magit status buffer for the Git repository containing DIR.

**** Resetting/Reverting
***** Reset current HEAD to a revision

M-x magit-status
x
***** Reset working tree and staging area to recent Head

M-x magit-status
X

**** Branch Manager
***** Delete a Branch

# Move to branch (C-n or C-p)
k

***** Delete a Branch (Force)

# Move to branch (C-n or C-p)
C-u k

***** List Branches

M-x magit-branch-manager
	 Show a list of branches in a dedicated buffer.

***** Create a branch

In the branch manager
b -> c
**** Stash
stash popup menu

M-x magit-status
z
**** Display Magit process buffer.
$
M-x magit-process
Display Magit process buffer.

**** Diffing
***** Diff Working Tree with HEAD

in Magit Mode
d
magit-diff-working-tree

***** Diff Index/Staging and HEAD

magit-diff-staged
Show differences between the index and the HEAD commit.

***** Diff Working Tree with Index/Staging

magit-diff-unstaged
Show differences between the current working tree and index.
***** Diff Working Tree with Stash

M-x magit-diff-stash
	 Show changes in a stash.

** Navigation

*** Dired
**** Change the file sizes to a human readable form

(setq dired-listing-switches "-alh")
**** Rename multiple files

M-x dired
M-x dired-toggle-read-only

# edit the buffer as normal

C-c C-c
to commit the changes

C-c C-k
to abort the changes

**** Kill all Dired buffers
M-x ibuffer
'* M' - Mark buffers by major mode.
'D' - Kill the marked buffers.

**** Mark all file in directory/subdirectory

 * s
M-x makey-key-mode-popup-dired-marking <enter> s
**** Mark Files that match a pattern

% m
M-x dired-mark-files-regexp

# Example regex

.+\.\(mp3\|m3u\|flac\)$
.+\.\(bmp\|tif\|jpg\|jpeg\|gif\|png\|psd\)$
.+\.\(eps\|svg\|ai\)$
.+\.\(ttf\|otf\|woff\|woff2\|eot\)$
.+\.\(pdf\|ps\|epub\|azw3\|mobi\|djvu\|chm\|doc\|djv\|dvi\)$
.+\.\(cbr\)$
.+\.\(txt\)$
.+\.\(iso\|box\)$
**** Hide subdirectory viewed in current buffer

$
M-x dired-hide-subdir
**** View subdirectory in the current buffer

i		dired-maybe-insert-subdir
**** Close subdirectory in the current buffer

Move the cusor to the subdirectory path line.
C-u k
*** Tree View

direx:jump-to-directory
direx-project:jump-to-project-root

*** Registers

C-x r C-@, C-x r C-SPC, C-x r SPC
point-to-register
	 Store current location of point in register REGISTER.

C-x r j
jump-to-register
	 Move point to location stored in a register.

*** Between Projects

projectile-switch-project C-c p p
	 Switch to a project we have visited before.

C-c p F
M-x helm-projectile-find-file-in-known-projects

M-x helm-projectile-all
	 Use projectile with Helm for finding files in all projects.

*** Directories

C-x C-j
dired-jump
	 Jump to Dired buffer corresponding to current buffer.

C-c p D
projectile-dired
	 Open `dired' at the root of the project.

C-x 4 C-j
dired-jump-other-window
	 Like \[dired-jump] (`dired-jump') but in other window.

M-x ag-dired
	 Recursively find files in DIR matching PATTERN.

M-x ag-dired-regexp
	 Recursively find files in DIR matching REGEXP.

C-c p d
projectile-find-dir
	 Jump to a project's directory using completion.

C-c p 4 d
projectile-find-dir-other-window
	 Jump to a project's directory in other window using completion.

C-c p D
projectile-dired
	 Open `dired' at the root of the project.

*** Dired
# In dired mode

t dired-toggle-marks
*** Within a file

**** Line

C-a, <home>
move-beginning-of-line

C-e, <end>
move-end-of-line

C-p, <up>
previous-line

C-n, <down>
next-line

C-f
forward-char

C-b
backward-char

M-f
forward-word

M-b
backward-word

**** Screen

C-l
recenter-top-bottom
Move current buffer line to the specified window line.

C-v
scroll-up-command

M-v
scroll-down-command

M-<
beginning-of-buffer

M->
end-of-buffer

**** Jumping

M-g g
M-g M-g
M-x goto-line
Go to LINE, counting from line 1 at beginning of buffer.

M-x helm-imenu
Preconfigured `helm' for `imenu'.

M-x ace-jump-char-mode
	 AceJump char mode

M-x ace-jump-line-mode
	 AceJump line mode.

**** Searching

M-x helm-swoop
search and jump

M-p
(While Searching)
select previous search string

M-n
(While Searching)
select next later search string

C-s
M-x isearch-forward
Do incremental search forward.

C-r
M-x isearch-backward
Do incremental search backward.

C-M-r
M-x isearch-backward-regexp
Do incremental search backward for regular expression.

C-M-s
M-x isearch-forward-regexp
Do incremental search forward for regular expression.

C-s Enter C-w word-search-forward
Search forward from point for STRING, ignoring differences in punctuation.

C-r Enter C-w word-search-backward
Search backward from point for STRING, ignoring differences in punctuation.

*** Accross muliple buffers

**** By name

C-c p b
helm-projectile-switch-to-buffer
**** By searching contents

C-c p s g
M-x helm-projectile-grep
Helm version of `projectile-grep'.

M-x projectile-grep
Perform rgrep in the project.

M-x helm-multi-swoop
search and jump

M-x helm-buffer-run-grep
Run Grep action from `helm-source-buffers-list'.

*** Across multiple files

**** By name

helm-projectile C-c p h
	 Use projectile with Helm instead of ido.

helm-recentf C-x c C-c f
	 Preconfigured `helm' for `recentf'.

C-c p f
projectile-find-file
	 Jump to a project's file using completion.

helm-git-files
	 `helm' for opening files managed by Git.

**** By searching contents

M-x helm-git-grep
	 Helm git grep.

M-x rgrep
	 Recursively grep for REGEXP in FILES in directory tree rooted at
	 DIR.

C-c p s g
M-x projectile-grep
	 Perform rgrep in the project.

C-c p s g
M-x helm-projectile-grep
	 Helm version of projectile-grep.

C-c p s s
M-x helm-projectile-ag
Search using ag

C-c p s a
M-x helm-projectile-ack
Search using ack

projectile-ack C-c p s a
	 Run an ack search with REGEXP in the project.
